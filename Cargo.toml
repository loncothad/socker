[workspace]
resolver = "3"
members  = [ "lib" ]

[workspace.package]
authors      = [ "loncothad <me@loncothad.cc>" ]
license-file = "LICENSE.md"
repository   = "https://github.com/loncothad/socker"
rust-version = "1.85"
edition      = "2024"

[profile.release]
opt-level = "z"
lto       = true

[workspace.dependencies]
futures = "0.3"

[workspace.lints.rust]
non_ascii_idents = "forbid"

[workspace.lints.clippy]
allow_attributes                = "warn"
allow_attributes_without_reason = "deny"
arithmetic_side_effects         = "warn"
as_ptr_cast_mut                 = "warn"
as_underscore                   = "warn"
assertions_on_result_states     = "deny"
assigning_clones                = "warn"
borrow_as_ptr                   = "deny"
branches_sharing_code           = "warn"
# cargo_common_metadata = "warn"
case_sensitive_file_extension_comparisons = "warn"
cast_lossless                             = "warn"
cast_possible_truncation                  = "warn"
cast_possible_wrap                        = "warn"
cast_precision_loss                       = "warn"
cast_sign_loss                            = "deny"
cfg_not_test                              = "deny"
checked_conversions                       = "warn"
clear_with_drain                          = "deny"
clone_on_ref_ptr                          = "deny"
cloned_instead_of_copied                  = "warn"
collection_is_never_read                  = "warn"
comparison_chain                          = "warn"
# create_dir = "warn"
dbg_macro                           = "forbid"
debug_assert_with_mut_call          = "warn"
default_trait_access                = "warn"
derive_partial_eq_without_eq        = "warn"
doc_comment_double_space_linebreaks = "deny"
elidable_lifetime_names             = "warn"
else_if_without_else                = "warn"
empty_drop                          = "deny"
enum_glob_use                       = "warn"
error_impl_error                    = "deny"
exit                                = "warn"
expect_used                         = "deny"
expl_impl_clone_on_copy             = "deny"
explicit_into_iter_loop             = "warn"
explicit_iter_loop                  = "warn"
fallible_impl_from                  = "warn"
field_scoped_visibility_modifiers   = "deny"
filetype_is_file                    = "warn"
filter_map_next                     = "warn"
flat_map_option                     = "warn"
# float_arithmetic = "warn"
# float_cmp = "warn"
# float_cmp_const = "warn"
fn_params_excessive_bools    = "warn"
format_collect               = "warn"
format_push_string           = "deny"
from_iter_instead_of_collect = "warn"
if_not_else                  = "warn"
if_then_some_else_none       = "warn"
ignore_without_reason        = "forbid"
ignored_unit_patterns        = "warn"
# impl_trait_in_params = "warn"
implicit_clone                  = "warn"
implicit_hasher                 = "warn"
imprecise_flops                 = "warn"
inconsistent_struct_constructor = "forbid"
index_refutable_slice           = "warn"
indexing_slicing                = "warn"
inefficient_to_string           = "warn"
infinite_loop                   = "deny"   # [allow] with reason is expected by the user
inline_always                   = "deny"
inline_asm_x86_att_syntax       = "deny"
inline_asm_x86_intel_syntax     = "allow"
# integer_division_remainder_used = "warn"
items_after_statements              = "warn"
iter_filter_is_ok                   = "warn"
iter_filter_is_some                 = "warn"
iter_not_returning_iterator         = "deny"
iter_over_hash_type                 = "warn"
iter_with_drain                     = "warn"
iter_without_into_iter              = "deny"
large_futures                       = "warn"
large_include_file                  = "warn"
large_stack_arrays                  = "deny"
literal_string_with_formatting_args = "warn"
manual_assert                       = "deny"
manual_instant_elapsed              = "warn"
manual_is_power_of_two              = "warn"
manual_is_variant_and               = "warn"
manual_midpoint                     = "warn"
manual_string_new                   = "warn"
many_single_char_names              = "warn"
map_err_ignore                      = "warn"
map_unwrap_or                       = "warn"
match_same_arms                     = "deny"
match_wild_err_arm                  = "deny"
match_wildcard_for_single_variants  = "warn"
mem_forget                          = "warn"
min_ident_chars                     = "warn"
mismatching_type_param_order        = "warn"
missing_assert_message              = "forbid"
missing_const_for_fn                = "warn"
missing_docs                        = "warn"
missing_errors_doc                  = "forbid"
missing_panics_doc                  = "forbid"
mixed_read_write_in_expression      = "warn"
mod_module_files                    = "deny"
module_name_repetitions             = "deny"
modulo_arithmetic                   = "deny"
multiple_inherent_impl              = "allow"
multiple_unsafe_ops_per_block       = "deny"
mut_mut                             = "warn"
needless_collect                    = "warn"
needless_pass_by_ref_mut            = "warn"
negative_feature_names              = "deny"
no_effect_underscore_binding        = "warn"
no_mangle_with_rust_abi             = "warn"
non_zero_suggestions                = "warn"
nonstandard_macro_braces            = "warn"
or_fun_call                         = "warn"
panic                               = "deny"
partial_pub_fields                  = "warn"
path_buf_push_overwrite             = "warn"
pattern_type_mismatch               = "warn"
print_stderr                        = "warn"
print_stdout                        = "warn"
pub_underscore_fields               = "deny"
pub_without_shorthand               = "deny"
rc_mutex                            = "warn"
read_zero_byte_vec                  = "warn"
redundant_closure_for_method_calls  = "warn"
redundant_feature_names             = "warn"
redundant_pub_crate                 = "warn"
redundant_test_prefix               = "warn"
ref_patterns                        = "warn"
renamed_function_params             = "forbid"
rest_pat_in_fully_bound_structs     = "warn"
return_and_then                     = "warn"
same_functions_in_if_condition      = "deny"
same_name_method                    = "forbid"
semicolon_if_nothing_returned       = "warn"
semicolon_inside_block              = "warn"
shadow_same                         = "warn"
shadow_unrelated                    = "warn"
should_panic_without_expect         = "forbid"
similar_names                       = "warn"
single_option_map                   = "deny"
# str_split_at_newline = "warn"
string_add                   = "forbid"
string_add_assign            = "forbid"
string_to_string             = "warn"
struct_field_names           = "warn"
suboptimal_flops             = "deny"
tests_outside_test_module    = "forbid"
todo                         = "warn"
too_long_first_doc_paragraph = "warn"
trailing_empty_array         = "warn"
trait_duplication_in_bounds  = "warn"
trivial_regex                = "forbid"
try_err                      = "warn"
type_repetition_in_bounds    = "warn"
undocumented_unsafe_blocks   = "forbid"
unimplemented                = "warn"
unnecessary_debug_formatting = "warn"
unnecessary_literal_bound    = "warn"
unnecessary_safety_doc       = "warn"
unneeded_field_pattern       = "warn"
unnested_or_patterns         = "warn"
unreachable                  = "allow"
unreadable_literal           = "warn"
unseparated_literal_suffix   = "forbid"
unused_async                 = "warn"
unused_peekable              = "warn"
unused_rounding              = "warn"
unused_self                  = "warn"
unused_trait_names           = "warn"
unwrap_used                  = "deny"
used_underscore_items        = "warn"
useless_let_if_seq           = "warn"
verbose_bit_mask             = "warn"
verbose_file_reads           = "warn"
wildcard_dependencies        = "forbid"
